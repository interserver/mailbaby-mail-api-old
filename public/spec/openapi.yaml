openapi: 3.0.3
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/InterServer/Mail-Baby/1.0.0
  - description: Live API Endpoint
    url: 'https://api.mailbaby.net'
  - description: Temporary API Endpoint
    url: 'http://mystage.interserver.net:8787'
  - description: SwaggerHub API Auto Mocking
    url: 'https://virtserver.swaggerhub.com/InterServer/MailBaby/1.0.0'
info:
  description: |
    **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.**


    # 📌 Overview

    This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net).


    # 🔐 Authentication

    In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site.  

    We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page.

    _Alternatively , you may use your normal **Login Email** and **Password** from [my.interserver.net](https://my.interserver.net/); however for security we recomend using the **API Key**_
  version: 1.0.0
  title: MailBaby Email Delivery API
  contact:
    email: support@interserver.net
    url: https://www.mail.baby/contact/
    name: Mail Baby
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  termsOfService: 'https://www.interserver.net/terms-of-service.html'
paths:
  /mail:
    get:
      summary: displays a list of mail service orders
      operationId: getMailOrders
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1234
                    status:
                      type: string
                      example: active
                    username:
                      type: string
                      example: mb1234
                    password:
                      type: string
                      example: guest123
                    comment:
                      type: string
                      example: main mail account
                  required:
                    - id
                    - status
                    - username
          links:
            sendMailByIdLink:
              operationId: sendMail
              parameters:
                id: '$response.body#/0/id'
              description: The `id` value returned in the response can be used as the `id` parameter in `GET /mail/advsend`.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/Unauthorized'
  /mail/send:
    post:
      summary: Sends an Email
      operationId: sendMail
      description: |
        Sends an email through one of your mail orders.
        
        *Note*: If you want to send to multiple recipients or use file attachments use the advsend (Advanced Send) call instead.
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendMail'
          application/json:
            schema:
              $ref: '#/components/schemas/SendMail'
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '400':
          $ref: '#/components/responses/BadInput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /mail/advsend:
    post:
      summary: Sends an Email with Advanced Options
      operationId: sendAdvMail
      description: Sends An email through one of your mail orders allowing additional options such as file attachments, cc, bcc, etc.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMailAdv'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendMailAdv'
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '400':
          $ref: '#/components/responses/BadInput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /mail/log:
    get:
      summary: displays the mail log
      operationId: viewMailLog
      description: |
        By passing in the appropriate options, you can search for
        available inventory in the system
      parameters:
        - name: id
          in: query
          description: The ID of your mail order this will be sent through.
          required: false
          schema:
            type: integer
            format: int64
        - in: query
          name: searchString
          description: pass an optional search string for looking up inventory
          required: false
          schema:
            type: string
        - in: query
          name: skip
          description: number of records to skip for pagination
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MailLog'
        '400':
          description: bad input parameter
  /ping:
    get:
      summary: Checks if the server is running
      operationId: pingServer
      security: []
      responses:
        '200':
          description: Server is up and running
        default:
          description: Something is wrong
      parameters: []
components:
  # Security scheme definitions (see Authentication)
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
  # Reusable schemas (data models)
  schemas:
    # Schema for error response body
    GenericResponse:
      type: object
      properties:
        status:
          type: string
          example: ok
        text:
          type: string
          example: The command completed successfully.
    MailLog:
      type: object
      properties:
        id:
          type: integer
          format: int64
      description: Mail Order Details
    MailContact:
      type: object
      description: An Email Contact
      properties:
        email:
          type: string
          example: johndoe@company.com
          description: The email address
        name:
          type: string
          example: John Doe
          description: Optional contact name
      required:
        - email
    MailAttachment:
      type: object
      description: A File attachment for an email
      properties:
        filename:
          type: string
          example: company_logo.png
          description: Optional filename to specify for the attachment.
        data:
          type: string
          format: binary
          description: Contents of the attached file
      required:
        - data
    SendMail:
      type: object
      description: Details for an Email
      properties:
        to:
          type: string
          description: The Contact whom is the primary recipient of this email.
          example: johndoe@company.com
        from:
          type: string
          description: The contact whom is the this email is from.
          example: janedoe@company.com
        subject:
          type: string
          description: The subject or title of the email
          example: Attention Client
        body:
          type: string
          description: The main email contents.
          example: This is an email to inform you that something noteworthy happened.
      required:
        - to
        - from
        - subject
        - body
    SendMailAdv:
      title: Email details
      type: object
      properties:
        subject:
          type: string
          description: The subject or title of the email
          example: Your Package has been Delivered!
        body:
          type: string
          description: The main email contents.
          example: >
            The package you ordered on 2021-01-23 has been delivered.
            If the package is broken into many pieces, please blaim
            someone else.
        from:
          type: array
          description: The contact whom is the this email is from.
          items:
            type: object
            description: An Email Contact
            properties:
              email:
                type: string
                example: johndoe@company.com
                description: The email address
              name:
                type: string
                example: John Doe
                description: Optional contact name
            required:
              - email
        to:
          type: array
          description: The Contact whom is the primary recipient of this email.
          items:
            $ref: '#/components/schemas/MailContact'
        id:
          type: integer
          format: int64
          description: The ID of the Mail order within our system to use as the Mail Account.
          example: 5000
        replyto:
          type: array
          description: Optional list of Contacts that specify where replies to the email should be sent instead of the _from_ address.
          items:
            $ref: '#/components/schemas/MailContact'
        cc:
          type: array
          description: Optional list of Contacts that should receive copies of the email.  They are listed on the email and anyone getting the email can see this full list of Contacts who received the email as well.
          items:
            $ref: '#/components/schemas/MailContact'
        bcc:
          type: array
          description: Optional list of Contacts that should receive copies of the email.  They are hidden on the email and anyone gettitng the email would not see the other people getting the email in this list.
          items:
            $ref: '#/components/schemas/MailContact'
        attachments:
          type: array
          description: Optional file attachments to include in the email
          items:
            $ref: '#/components/schemas/MailAttachment'
      description: Details for an Email
      required:
        - id
        - from
        - to
        - subject
        - body
  # Reusable request bodies
  requestBodies: {}
  # Reusable responses, such as 401 Unauthorized or 400 Bad Request
  responses:
    BadInput:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
              message:
                type: string
            required:
              - code
              - message  
    AlreadyExists:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
              message:
                type: string
            required:
              - code
              - message  
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
              message:
                type: string
            required:
              - code
              - message  
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
              message:
                type: string
            required:
              - code
              - message  
  # Reusable response headers
  headers: {}
  # Reusable examples
  examples: {}
  # Reusable links
  links: {}
  # Reusable callbacks
  callbacks: {}
  # Reusable path, query, header and cookie parameters
  parameters:
    offsetParam:      # Can be referenced via '#/components/parameters/offsetParam'
      name: offset
      in: query
      description: Number of items to skip before returning the results.
      required: false
      schema:
        type: integer
        format: int32
        minimum: 0
        default: 0
    limitParam:       # Can be referenced as '#/components/parameters/limitParam'
      name: limit
      in: query
      description: Maximum number of items to return.
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        default: 20  
security:
  - apiKeyAuth: []
externalDocs:
  description: FAQ
  url: https://www.mail.baby/tips/